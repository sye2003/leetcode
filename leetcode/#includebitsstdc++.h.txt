#include<bits/stdc++.h>
using namespace std;

int minCost(vector<vector<int>> &Grid,int i, int j,vector<vector<int>> &dp){
    if(i==0 && j==0){
        return G[0][0];
    }
    if(dp[i][j]!=-1){
        return dp[i][j];
    }
    int mini;
    if(i>0){
        mini=minCost(Grid,i-1,j)+Grid[i][j];
    }
    if(j>0){
        mini=min(mini,minCost(Grid,i,j-1)+Grid[i][j]);
    }
    dp[i][j]=mini;
    return mini;
}

int main(){
    
    
    dp[0][0]=Grid[0][0];
    for(int i=0;i<N;i++){
        for(int j=0;j<N;j++){
            dp[i][j]=INT_MAX;
            if(i>0){
                dp[i][j]=dp[i-1][j]+Grid[i][j];
            }
            if(j>0){
                dp[i][j]=min(dp[i][j],dp[i][j-1]+Grid[i][j]);
            }
        }
    }
    cout<<dp[N-1][N-1];
    return 0;
}